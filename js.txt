How to write a function
input-process-output

What is ES6?
This is also know as ECMAScript 6
ECMAScript is the standard for scripting languages while Javascript is the implementation
The main purpose of ES6 is to write lesser lines of code

Array Helper Methods 
The array helpers helps us iterate through an array
-forEach
-Map
-Filter
-Find
-every
-some
-reduce
Whenever you use any helper, always use the return keyword

1)forEach helper method
The forEach behaves the same way as the for loop
The goal is to stay away from for loops and use this helper methods
-Iterator Function: function passed to the forEach method

Why use forEach?
It shorter line of code than the traditional for loop

2)The Map helper method
This can also do what the for loop does
-This returns a transformed copied of the existing array with the same length of the existing array
-Always add the return key word

3)filter helper method
-This returns a subset of the existing array ie only elements of the arrays that pass a certain condition
-This returns a truthy or falsy value, the truthy value will be returned in a results array

4)find helper method
-returns the first result of the particular data you are looking for 

5)every helper method
-this returns boolean after a condition 
-this checks if every elements meets the condition and returns true

6)some helper method
-this also returns boolean after a condition
-this check if at least one meets the condition and return true

7)reduce helper method
-This helper is so flixible that it can do what all the other helpers can do
-with reduce, we pass in an initial value after the function
-The first argument inside the function is the initial value passed 
-syntax:
numbers.reduce(function(sum, number) {
    return sum + number;
}, 0)
sum = inital value = 0

8) For of loop
This is used to iterate through arrays of data

    Variable And Constant
Variable decleration with const and let
Const : This is used to declear a consant Variable
let : This is used to declear a variable that will probably change over time
-Why use const or let? 
To make the code more readable 
when you see a const assigned to a variable, you know the variable is not changing
but when you see a let , you know the variable is supposed to change

    Template literals
This is a better way to concatinate strings than use the + operator

    Arrow function (=>)
This is an alternative way of writing regular functions 
-if after writing your arrow function and you have a single line of code statement, you can remove the curly brackets 
and the return statement
-if you also have a single argument, you can omit the parenthesis in the parameter
    Where to use arrow functions
-They are preferable us as call back functions
arrow fuction makes the "this" keyword work the way it should
-lexical this: an arrow function will keep climbing up the scope chain until it locates a function with a defined this keyword

    Enhanced Object literals
This is about writing object literals in a more compact fashion
-whenever we make reference to a key and value, and they are exact same name. we can write out only the variable(key) name
-whenever we have a key value pair and the value is a function, we can omit both the semicolumn and "function" keyword

    Default function Arguments
You can manually pass in a default value to a fuction parameter

    Rest and spread operator
1)rest Operator(...): This is used to capture unknown number of arguments and put them in an array
2)spread Operator (...): This is used to join the content of an array into another array together 

    Destructuring
This is a process of making assignments and reduce duplicate codes
-The variable name must be equal to the name we are trying to copy off

    Classes
This is meant to solve object oriented programming without using the Prototype inheritance.
-Whenever the new keyword is used on a class, the constructor function is ran
-A function inside an object is a method
-When creating a method using Enhanced object literals, we just use the 'function name', 'parenthesis', 'opening
and closing curly brackets'.
-The 'extends' keyword extends all the properties from one class to another class
-super(): this methods calls a method into another method and we dont use Destructuring

    Generators
what is a generator function: It is a function that we can enter and exist multiple times
-array helper do not work with generators
-yeild: This is a keyword we use inside the generator function
-We execute code inside our generator by caliing .next()
-Generators work perfectly with the for of loop
-Generator Delegation: This is used when we have multiple generators that sort of make sense to be ran together
-Symbol iterator: This is a tool that teaches objects how to respond to the for of 

    Promises
promises are a way of solving long running processes or request
    Promises exist in 3 states 
1)unresolved: This is a default state of a promise i.e we are waiting for something to happen.
2)resolved: When a promise enters a resolve state, it mean it is done waiting and everything went ok. 
3)rejected: it enters this state when it is done waiting and something went bad
After a promise is created, we can register a call back function with "then" or "catch".
    How to create a promise
a promise and an ajax request go hand in hand and but it's not complusory
-whenever we create a promise, the promise variable has two properties - then and catch


